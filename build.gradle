plugins {
    id 'cpp'
    id 'java'
    id 'google-test'
    id "com.diffplug.spotless" version '6.25.0'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
    id 'edu.wpi.first.NativeUtils' version '2025.6.0'
    id 'edu.wpi.first.GradleJni' version '1.1.0'
    id 'edu.wpi.first.GradleVsCode' version '2.1.0'
}

repositories {
    mavenCentral()
}
if (project.hasProperty('releaseMode')) {
    wpilibRepositories.addAllReleaseRepositories(project)
} else {
    wpilibRepositories.addAllDevelopmentRepositories(project)
}

// Apply C++ configuration
apply from: 'config.gradle'

// Apply Java configuration
dependencies {
    implementation 'edu.wpi.first.cscore:cscore-java:2025.+'
    implementation 'edu.wpi.first.cameraserver:cameraserver-java:2025.+'
    implementation 'edu.wpi.first.ntcore:ntcore-java:2025.+'
    implementation 'edu.wpi.first.wpilibj:wpilibj-java:2025.+'
    implementation 'edu.wpi.first.wpiutil:wpiutil-java:2025.+'
    implementation 'edu.wpi.first.wpimath:wpimath-java:2025.+'
    implementation 'edu.wpi.first.wpiunits:wpiunits-java:2025.+'
    implementation 'edu.wpi.first.hal:hal-java:2025.+'
    implementation "org.ejml:ejml-simple:0.43.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.2"
}

apply plugin: 'com.diffplug.spotless'

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        googleJavaFormat('1.15.0')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'xml', {
        target fileTree('.') {
            include '**/*.xml'
            exclude '**/build/**', '**/build-*/**'
        }
        eclipseWtp('xml')
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}

// Set up exports properly
nativeUtils {
    exportsConfigs {
        // Main library is just default empty. This will export everything
        Vendor {
        }
    }
}

model {
    components {
        Vendor(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs 'src/main/native/cpp'
                        include '**/*.cpp'
                    }
                    exportedHeaders {
                        srcDirs 'src/main/native/include'
                    }
                }
            }
            nativeUtils.useRequiredLibrary(it, 'wpilib_shared')
        }
    }
    testSuites {
        VendorTest {
            sources.cpp {
                source {
                    srcDir 'src/test/native/cpp'
                    include '**/*.cpp'
                }
            }

            nativeUtils.useRequiredLibrary(it, "wpilib_executable_shared", "googletest_static")
        }
    }
}

apply from: 'publish.gradle'

wrapper {
    gradleVersion '8.10.2'
}
